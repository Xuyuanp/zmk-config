/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <2 3>;
            require-prior-idle-ms = <50>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <3 4>;
            require-prior-idle-ms = <50>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <7 8>;
            require-prior-idle-ms = <50>;
        };

        delete {
            bindings = <&kp DEL>;
            key-positions = <9 8>;
        };

        copy {
            bindings = <&kp C_AC_COPY>;
            key-positions = <26 27>;
        };

        paste {
            bindings = <&kp C_AC_PASTE>;
            key-positions = <27 28>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB                    &kp Q         &kp W       &kp E     &kp R        &kp T           &kp Y            &kp U      &kp I      &kp O            &kp P             &kp MINUS
&mt RCTRL EQUAL            &kp A         &kp S       &kp D     &kp F        &kp G           &kp H            &kp J      &kp K      &kp L            &kp SEMI          &mt RCTRL SINGLE_QUOTE
&mt LEFT_GUI LEFT_BRACKET  &mt LSHIFT Z  &mt LALT X  &kp C     &kp V        &kp B           &kp N            &kp M      &kp COMMA  &mt LALT PERIOD  &mt RSHIFT SLASH  &mt RIGHT_WIN RIGHT_BRACKET
                                                     &kp LGUI  &lt 2 ENTER  &lt 3 ESCAPE    &lt 1 BACKSPACE  &kp SPACE  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB  &kp N1  &kp N2  &kp N3   &kp N4   &kp N5     &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &kp BSPC
&kp F6   &kp F1  &kp F2  &kp F3   &kp F4   &kp F5     &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&kp F7   &kp F8  &kp F9  &kp F10  &kp F11  &kp F12    &trans    &trans    &trans  &trans     &trans  &trans
                         &trans   &trans   &trans     &trans    &trans    &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                             &trans    &trans    &trans       &trans     &trans     &trans
            >;
        };

        layer_3 {
            bindings = <
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };
    };
};
